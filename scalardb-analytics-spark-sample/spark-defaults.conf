# Use the ScalarDB Analytics catalog as `test_catalog`
spark.sql.catalog.test_catalog com.scalar.db.analytics.spark.ScalarDbAnalyticsCatalog

# Enable Spark extension for ScalarDB Analytics
spark.sql.extensions com.scalar.db.analytics.spark.extension.ScalarDbAnalyticsExtensions

# Set `test_catalog` as the default catalog
spark.sql.defaultCatalog test_catalog

# Confiture the ScalarDB Analytics license. PLEASE REPLACE THESE VALUES WITH YOUR LICENSE KEY AND CERTIFICATE CONTENTS
spark.sql.catalog.test_catalog.license.key <REPLACE_THIS_WITH_YOUR_LICENSE>
spark.sql.catalog.test_catalog.license.cert_pem <REPLACE_THIS_WITH_YOUR_LICENSE_CERTIFICATE_PEM_CONTENTS>

# Configure the ScalarDB Analytics catalog for ScalarDB
spark.sql.catalog.test_catalog.data_source.scalardb.type scalardb
spark.sql.catalog.test_catalog.data_source.scalardb.config_path /etc/scalardb.properties

# Configure the ScalarDB Analytics catalog for PostgreSQL, which is not managed by ScalarDB
spark.sql.catalog.test_catalog.data_source.postgresql.type postgresql
spark.sql.catalog.test_catalog.data_source.postgresql.host postgres
spark.sql.catalog.test_catalog.data_source.postgresql.port 5432
spark.sql.catalog.test_catalog.data_source.postgresql.username postgres
spark.sql.catalog.test_catalog.data_source.postgresql.password postgres
spark.sql.catalog.test_catalog.data_source.postgresql.database sampledb
